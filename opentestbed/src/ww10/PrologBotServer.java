package ww10;

import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.StringWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.apache.commons.io.IOUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import bots.prologbot.PrologBot;

import com.sun.xml.internal.bind.v2.runtime.Name;

import ww10.WW10Protocol.PrologBotDescription;
import ww10.gui.DataModel;

public class PrologBotServer implements Runnable {

	public final int port;

	private boolean running = true;
	private ConcurrentHashMap<String,Table> tables;

	private ServerSocket serverSocket;

	public PrologBotServer() {
		this(20000);
	}

	public PrologBotServer(int port) {
		this.port = port;
		try {
			serverSocket = new ServerSocket(port);
			//hack around JRE bug?
			serverSocket.setSoTimeout(50);
		} catch (IOException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
			System.out.println("Could not listen on port: " + port);
			System.exit(-1);
		}
		
		tables = new ConcurrentHashMap<String,Table>();
	}
	
	public static void main(String[] args) {
		(new PrologBotServer() {
			
		}).run();
	}

	public void stop() throws IOException {
		running = false;
		serverSocket.close();
	}

	public void run() {
		while (running) {
			Socket clientSocket = null;
			try {
				clientSocket = serverSocket.accept();
				System.out.println("Incoming connection");
				RequestHandler handler = new RequestHandler(clientSocket, this);
				Thread t = new Thread(handler);
				t.start();
			} catch (SocketTimeoutException excp) {
				try {
					Thread.sleep(600);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				// try again
			} catch (IOException e) {
				System.out.println(e.getMessage());
				e.printStackTrace();
				System.out.println("Accept failed: 4444");
				System.exit(-1);
			}
		}

	}
	
	protected synchronized Table getTable(String tableName){
		return tables.get(tableName);
	}
	
	protected synchronized void addTable(String tableName, Table table){
		tables.put(tableName, table);
	}

}
